<div class="flex justify-center">
  <div class="max-w-screen-sm">
    <div class="flex justify-center m-8 items-center">
      <div>
        <a href="/" class="text-4xl font-bold text-gray-800">Ayanami's Tower</a>
        
        <h2 class="text-lg text-gray-600">The Art Of Coding</h2>
      </div>
       <img src="images/tower-of-babel.png" alt="Tower of Babel" class="h-24 w-auto mr-4" />
    </div>
    
    <div class="bg-gray-100 mx-8 p-6 rounded-lg shadow-md">
      <h1 class="font-bold text-gray-800">The Nature of Order</h1>
      
      <blockquote class="text-lg italic font-semibold text-gray-800 ">
        <p>
          "A structure is whole when it is alive, and it is alive when it lets every part be as independent as possible, and yet requires every part to serve the whole without reserve."
        </p>
      </blockquote>
      
      <figcaption class="mt-4 text-sm text-gray-600 text-right">
        â€” Christopher Alexander
      </figcaption>
    </div>
    
    <div class="mt-20">
      <h2 class="text-2xl font-bold text-gray-600">What in Gods Name is Good Code?</h2>
      
      <p class="text-lg my-8">
        When you write small programs around 1000 - 2000 lines of code. Its totally irrelevant what coding style, structure you use. The main reason for this is that you dont need to use so much cognitive time and energy to understand such a program. Lets assume you forget anything you did and you are seeing your code for the first time in a long time. It will take sometime to understanding everything but it shouldnt take that long. But everyone nows that if you simply write code without regarding maintainability at some point a tipping moment will be reached and more and more confusion accumilates what moving parts effect what. And the feeling arises to simply start over. As it seems the more easier and faster path.
      </p>
      
      <p class="text-lg my-8">
        The problem is that the moment you realise something must change its usually too late. On the other spectrum is writing code with the highest maintainability and extensibility in mind. Thinking of every different higher level abstraction possible. Here the problem lies that abstractions are only valuable for the program itself not for the user (Although one might argue that less bugs and faster new features has a value for the user).
      </p>
      
      <p class="text-lg my-8">
        Now as we understand there must be somekind of structure in place to avoid spagetti code. But how this structure should look like it complicated and arguable on many levels. Adding structure to something often means loosing maluablity.
      </p>
    </div>
  </div>
</div>
